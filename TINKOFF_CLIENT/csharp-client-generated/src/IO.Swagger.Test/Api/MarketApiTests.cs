/* 
 * OpenAPI
 *
 * tinkoff.ru/invest OpenAPI.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: n.v.melnikov@tinkoff.ru
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing MarketApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class MarketApiTests
    {
        private MarketApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new MarketApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of MarketApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' MarketApi
            //Assert.IsInstanceOfType(typeof(MarketApi), instance, "instance is a MarketApi");
        }

        /// <summary>
        /// Test MarketBondsGet
        /// </summary>
        [Test]
        public void MarketBondsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MarketBondsGet();
            //Assert.IsInstanceOf<MarketInstrumentListResponse> (response, "response is MarketInstrumentListResponse");
        }
        /// <summary>
        /// Test MarketCurrenciesGet
        /// </summary>
        [Test]
        public void MarketCurrenciesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MarketCurrenciesGet();
            //Assert.IsInstanceOf<MarketInstrumentListResponse> (response, "response is MarketInstrumentListResponse");
        }
        /// <summary>
        /// Test MarketEtfsGet
        /// </summary>
        [Test]
        public void MarketEtfsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MarketEtfsGet();
            //Assert.IsInstanceOf<MarketInstrumentListResponse> (response, "response is MarketInstrumentListResponse");
        }
        /// <summary>
        /// Test MarketSearchByFigiGet
        /// </summary>
        [Test]
        public void MarketSearchByFigiGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string figi = null;
            //var response = instance.MarketSearchByFigiGet(figi);
            //Assert.IsInstanceOf<MarketInstrumentResponse> (response, "response is MarketInstrumentResponse");
        }
        /// <summary>
        /// Test MarketSearchByTickerGet
        /// </summary>
        [Test]
        public void MarketSearchByTickerGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string ticker = null;
            //var response = instance.MarketSearchByTickerGet(ticker);
            //Assert.IsInstanceOf<MarketInstrumentListResponse> (response, "response is MarketInstrumentListResponse");
        }
        /// <summary>
        /// Test MarketStocksGet
        /// </summary>
        [Test]
        public void MarketStocksGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MarketStocksGet();
            //Assert.IsInstanceOf<MarketInstrumentListResponse> (response, "response is MarketInstrumentListResponse");
        }
    }

}
